// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lapGen.persistance;

#nullable disable

namespace lapGen.Migrations
{
    [DbContext(typeof(DataCon))]
    [Migration("20220614231125_rebuild2")]
    partial class rebuild2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("lapGen.Models.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("number")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("lapGen.Models.Driver", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("rank")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("lapGen.Models.Lap", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("lapNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Laps");
                });

            modelBuilder.Entity("lapGen.Models.Record", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("carID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("driverID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("lapID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("timeInSeconds")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("carID");

                    b.HasIndex("driverID");

                    b.HasIndex("lapID");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("lapGen.Models.Record", b =>
                {
                    b.HasOne("lapGen.Models.Car", "car")
                        .WithMany()
                        .HasForeignKey("carID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lapGen.Models.Driver", "driver")
                        .WithMany()
                        .HasForeignKey("driverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lapGen.Models.Lap", "lap")
                        .WithMany("records")
                        .HasForeignKey("lapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("car");

                    b.Navigation("driver");

                    b.Navigation("lap");
                });

            modelBuilder.Entity("lapGen.Models.Lap", b =>
                {
                    b.Navigation("records");
                });
#pragma warning restore 612, 618
        }
    }
}
